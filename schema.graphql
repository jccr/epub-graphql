type Query {
  package: Package
}

interface Node {
  id: ID
}

interface I18n {
  dir: String
  lang: String
}

interface Value {
  value: String
}

type Package implements Node & I18n {
  id: ID

  dir: String
  lang: String

  version: String
  uniqueIdentifier: Identifier

  metadata: Metadata
  manifest: Manifest
  spine: Spine
}

type Metadata {
  identifier: Identifier
  title: [Title]
  language: [Language]

  contributor: [Contributor]
  coverage: [Coverage]
  creator: [Creator]
  date: [Date]
  description: [Description]
  format: [Format]
  publisher: [Publisher]
  relation: [Relation]
  rights: [Rights]
  source: [Source]
  subject: [Subject]
  type: [Type]

  belongsToCollection: [BelongsToCollection]
}

type Identifier implements Node & Value & MetaProperties {
  id: ID

  value: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated

  identifierType: Meta
}

type Title implements Node & Value & I18n & MetaProperties {
  id: ID

  value: String

  dir: String
  lang: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated

  titleType: Meta
} 

type Language implements Node & Value & MetaProperties {
  id: ID

  value: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated
}

type Contributor implements Node & Value & I18n & MetaProperties {
  id: ID

  value: String

  dir: String
  lang: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated

  role: Meta
}

type Coverage implements Node & Value & I18n & MetaProperties {
  id: ID

  value: String

  dir: String
  lang: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated
}

type Creator implements Node & Value & I18n & MetaProperties {
  id: ID

  value: String

  dir: String
  lang: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated

  role: Meta
}

type Date implements Node & Value & MetaProperties {
  id: ID

  value: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated
}

type Description implements Node & Value & I18n & MetaProperties {
  id: ID

  value: String

  dir: String
  lang: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated
}

type Format implements Node & Value & MetaProperties {
  id: ID

  value: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated
}

type Publisher implements Node & Value & I18n & MetaProperties {
  id: ID

  value: String

  dir: String
  lang: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated
}

type Relation implements Node & Value & I18n & MetaProperties {
  id: ID

  value: String

  dir: String
  lang: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated
}

type Rights implements Node & Value & I18n & MetaProperties {
  id: ID

  value: String

  dir: String
  lang: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated
}

type Source implements Node & Value & MetaProperties {
  id: ID

  value: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated

  identifierType: Meta
  sourceOf: Meta
}

type Subject implements Node & Value & I18n & MetaProperties {
  id: ID

  value: String

  dir: String
  lang: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated

  authority: Meta
  term: Meta
}

type Type implements Node & Value & MetaProperties {
  id: ID

  value: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated
}

type BelongsToCollection implements Node & Value & I18n & Refines & MetaAttributes & MetaProperties {
  id: ID

  value: String

  dir: String
  lang: String

  refines: String

  property: String
  scheme: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated

  identifier: Meta
  collectionType: Meta
  belongsToCollection: [BelongsToCollection]
}

type Meta implements Node & Value & I18n & Refines & MetaAttributes & MetaProperties {
  id: ID

  value: String

  dir: String
  lang: String

  refines: String

  property: String
  scheme: String

  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated
}

interface Refines {
  refines: String
}

interface MetaAttributes {
  property: String
  scheme: String
}

interface MetaProperties {
  alternateScript: Meta
  displaySeq: Meta
  fileAs: Meta
  groupPosition: Meta
  metaAuth: Meta @deprecated
}

interface Resource {
  href: String
  mediaType: String
}

interface PropertiesList {
  properties: [String]
}

type Link implements Node & Resource & PropertiesList & Refines {
  id: ID

  href: String
  mediaType: String

  properties: [String]

  refines: String
}

type Manifest implements Node {
  id: ID

  item(
    id: [ID]
    anyProperties: [String]
    allProperties: [String]
    onlyProperties: [String]
  ): [ManifestItem]
}

type ManifestItem implements Node & Resource & PropertiesList {
  id: ID

  href: String
  mediaType: String

  properties: [String]

  mediaOverlay: ManifestItem
  fallback: ManifestItem
}

type SpineItem implements Node & PropertiesList {
  id: ID

  properties: [String]

  idref: ManifestItem
  linear: Boolean
}

type Spine implements Node {
  id: ID

  pageProgressionDirection: String
  toc: ManifestItem
  itemref(
    id: [ID]
    anyProperties: [String]
    allProperties: [String]
    onlyProperties: [String]
    linear: Boolean
  ): [SpineItem]
}
